apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
  namespace: uptime-dev
  labels:
    app: web
    environment: development
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web
  template:
    metadata:
      labels:
        app: web
        environment: development
    spec:
      containers:
      - name: web
        image: uptime/web:dev
        ports:
        - containerPort: 3000
          name: http
        env:
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: WEB_PORT
        envFrom:
        - configMapRef:
            name: app-config
        - secretRef:
            name: app-secrets
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 5
        volumeMounts:
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: tmp
        emptyDir: {}
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001

---
apiVersion: v1
kind: Service
metadata:
  name: web
  namespace: uptime-dev
  labels:
    app: web
    environment: development
spec:
  selector:
    app: web
  ports:
  - name: http
    port: 3000
    targetPort: 3000
    protocol: TCP
  type: LoadBalancer